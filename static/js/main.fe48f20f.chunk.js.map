{"version":3,"sources":["index.tsx"],"names":["MyDropzone","props","onDrop","useCallback","useDropzone","getRootProps","getInputProps","isDragActive","className","describe_preset_button","p","key","value","equal_cols","c1","c2","preset1_cols","preset2_cols","App","state","cols","preset1_disabled","preset2_disabled","result","handleChange","bind","handleButtonClick","acceptedFiles","file","reader","FileReader","onabort","alert","onerror","onload","ArrayBuffer","binary","decodedStr","iconv","decode","Buffer","from","header","body","parser","parse","delimiter","skip_empty_lines","on","record","Boolean","read","length","push","err","setState","message","console","log","key_col_name","value_col_name","col_ml_addr","findIndex","name","col_ml_member","addr2ml","keys","values","uniq_values","Set","reduce","sum","e","concat","all_values","Array","sort","inverted","Map","map","key_index","get","invert","row","split","filter","join","write","end","readAsArrayBuffer","event","target","id","this","p1_disabled","p2_disabled","currentTarget","rows","forEach","i","handleDrop","open","data-open","data-close","htmlFor","type","onChange","disabled","onClick","title","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe48f20f.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\nimport ReactDOM from 'react-dom';\nimport { useDropzone } from 'react-dropzone'\nimport iconv from \"iconv-lite\";\nimport parse from 'csv-parse'\nimport './index.css';\n\nfunction MyDropzone(props: any) {\n  const onDrop = useCallback(props.onDrop, [])\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div {...getRootProps({ className: 'dropzone' })}>\n      <input {...getInputProps()} />\n      {\n        isDragActive ?\n          <p>ファイルを開く ...</p> :\n          <p>CSVファイルをドロップ。もしくはクリックして選択。</p>\n      }\n    </div>\n  )\n}\n\nfunction invert<S, T>(keys: S[], values: T[][]): Map<T, S[]> {\n  let uniq_values = new Set<T>(values.reduce((sum, e) => sum.concat(e), []));\n  const all_values = Array.from(uniq_values).sort()\n  const inverted = new Map<T, S[]>(all_values.map(value => [value, []]));\n  keys.map((key, key_index) => values[key_index].map(value => inverted.get(value)!.push(key)))\n  return inverted;\n}\n\ntype ColumnsType = { key: string, value: string };\ntype ResultType = Map<string, string[]> | string | null;\ninterface AppState {\n  cols: ColumnsType,\n  preset1_disabled: boolean,\n  preset2_disabled: boolean,\n  result: ResultType,\n}\n\nfunction describe_preset_button(p: ColumnsType) {\n  return '\"' + p.key + '\"と\"' + p.value + '\"をセットします。';\n}\nfunction equal_cols(c1: ColumnsType, c2: ColumnsType) {\n  return c1.key === c2.key && c1.value === c2.value;\n}\nconst preset1_cols: ColumnsType = { key: 'MLアドレス', value: 'MLメンバー' };\nconst preset2_cols: ColumnsType = { key: 'MLメールアドレス(編集不可)', value: 'メンバー' };\n\nclass App extends React.Component<{}, AppState> {\n\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      cols: preset1_cols,\n      preset1_disabled: true,\n      preset2_disabled: false,\n      result: null,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleDrop(acceptedFiles: File[]) {\n    const file = acceptedFiles[0];\n    const reader = new FileReader()\n\n    reader.onabort = () => alert('file reading was aborted')\n    reader.onerror = () => alert('file reading has failed')\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      if (!(reader.result instanceof ArrayBuffer)) {\n        this.setState({\n          result: 'Something went wrong with FileReader',\n        })\n        return;\n      }\n      const binary = reader.result;\n      const decodedStr = iconv.decode(Buffer.from(binary), \"windows-31j\")\n\n      let header: string[] = [];\n      const body: string[][] = [];\n\n      // Create the parser\n      const parser = parse({\n        delimiter: ',',\n        skip_empty_lines: true,\n      })\n      // Use the readable stream api\n      parser.on('readable', () => {\n        let record: string[];\n        while (Boolean(record = parser.read())) {\n          if (header.length === 0) {\n            header = record;\n          } else {\n            body.push(record);\n          }\n        }\n      })\n      // Catch any error\n      parser.on('error', (err: any) => {\n        this.setState({\n          result: 'CSVのパースに失敗しました。' + err.message,\n        })\n      })\n\n      parser.on('end', () => {\n        console.log(header)\n        const key_col_name = this.state.cols.key;\n        const value_col_name = this.state.cols.value;\n        const col_ml_addr = header.findIndex(name => name === key_col_name);\n        if (col_ml_addr === -1) {\n          this.setState({\n            result: '[' + key_col_name + ']が見つかりませんでした。ヘッダは次の中から選ぶ必要があります。{' + header.join(', ') + '}',\n          })\n          return;\n        }\n        const col_ml_member = header.findIndex(name => name === value_col_name);\n        if (col_ml_member === -1) {\n          this.setState({\n            result: '[' + value_col_name + ']が見つかりませんでした。ヘッダは次の中から選ぶ必要があります。{' + header.join(', ') + '}',\n          })\n          return;\n        }\n        const ml_addrs = body.map(row => row[col_ml_addr])\n        const members = body.map(row => row[col_ml_member].split('\\n').filter(e => e.length > 0))\n        const addr2ml = invert(ml_addrs, members)\n        this.setState({\n          result: addr2ml,\n        });\n      })\n      parser.write(decodedStr)\n      parser.end()\n    }\n    reader.readAsArrayBuffer(file)\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { target: { id, value } } = event;\n    const cols: ColumnsType = { ...this.state.cols };\n    if (id === 'col_key') {\n      cols.key = value;\n    }\n    if (id === 'col_value') {\n      cols.value = value;\n    }\n    const p1_disabled = equal_cols(preset1_cols, cols);\n    const p2_disabled = equal_cols(preset2_cols, cols);\n    console.log(cols, preset1_cols, p1_disabled);\n    this.setState({\n      cols: cols,\n      preset1_disabled: p1_disabled,\n      preset2_disabled: p2_disabled\n    })\n  }\n\n  handleButtonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    const id = event.currentTarget.id;\n    let cols: ColumnsType;\n    let p1_disabled = false;\n    let p2_disabled = false;\n    if (id === 'btn_preset1') {\n      cols = preset1_cols;\n      p1_disabled = true;\n    } else {\n      cols = preset2_cols;\n      p2_disabled = true;\n    }\n    this.setState({\n      cols: cols,\n      preset1_disabled: p1_disabled,\n      preset2_disabled: p2_disabled\n    })\n  }\n\n  render() {\n    let result: React.ReactElement;\n    if (typeof this.state.result === 'string') {\n      result = (\n        <div>\n          <h2 className=\"error\">エラー</h2>\n          <div className=\"error\">\n            <p>\n              {this.state.result}\n            </p>\n          </div>\n        </div>\n      )\n    } else {\n      const rows = Array<React.ReactElement>();\n      if (this.state.result === null) {\n        rows.push(\n          <tr>\n            <td></td>\n            <td></td>\n          </tr>\n        )\n    } else {\n        this.state.result.forEach((value, key) => {\n          rows.push(\n            <tr key={key}>\n              <td>{key}</td>\n              <td>\n                <ol>\n                  {value.map((e, i) => (<li key={i}>{e}</li>))}\n                </ol>\n              </td>\n            </tr>\n          )\n        })\n      }\n      const header = (\n        <thead>\n          <tr>\n            <th>{this.state.cols.key}</th>\n            <th>{this.state.cols.value}</th>\n          </tr>\n        </thead>\n      )\n      result = (\n        <div>\n          <h2>結果</h2>\n          <table className=\"result\">\n            {header}\n            <tbody>\n              {rows}\n            </tbody>\n          </table>\n        </div>\n      )\n    }\n    return (\n      <div className=\"container\">\n        <MyDropzone\n          onDrop={(acceptedFiles: File[]) => this.handleDrop(acceptedFiles)} />\n        {result}\n        <h2>設定</h2>\n        <details className=\"dynamic\" open={typeof this.state.result !== 'string'}>\n          <summary data-open=\"閉じる\" data-close=\"開く\"></summary>\n          <table className=\"config\">\n            <tbody>\n              <tr>\n                <td>\n                  <label htmlFor=\"col_key\">メーリングリストのヘッダ</label>\n                </td>\n                <td>\n                  <input type=\"text\" id=\"col_key\" value={this.state.cols.key} onChange={this.handleChange} />\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <label htmlFor=\"col_value\">メールアドレスのヘッダ</label>\n                </td>\n                <td>\n                  <input type=\"text\" id=\"col_value\" value={this.state.cols.value} onChange={this.handleChange} />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <button disabled={this.state.preset1_disabled} id=\"btn_preset1\" onClick={this.handleButtonClick} title={this.state.preset1_disabled ? \"\" : describe_preset_button(preset1_cols)}>プリセット1(統計確認)</button>\n          <button disabled={this.state.preset2_disabled} id=\"btn_preset2\" onClick={this.handleButtonClick} title={this.state.preset2_disabled ? \"\" : describe_preset_button(preset2_cols)}>プリセット2(ML管理)</button>\n        </details>\n\n      </div>\n    )\n  }\n\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}