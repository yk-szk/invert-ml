{"version":3,"sources":["index.tsx"],"names":["MyDropzone","props","onDrop","useCallback","useDropzone","getRootProps","getInputProps","isDragActive","className","describe_preset_button","p","key","value","equal_cols","c1","c2","preset1_cols","preset2_cols","App","state","cols","preset1_disabled","preset2_disabled","rows","Map","error","handleChange","bind","handleButtonClick","acceptedFiles","file","reader","FileReader","onabort","alert","onerror","onload","result","ArrayBuffer","binary","decodedStr","iconv","decode","Buffer","from","header","body","parser","parse","delimiter","skip_empty_lines","on","record","Boolean","read","length","push","err","setState","message","console","log","key_col_name","value_col_name","col_ml_addr","findIndex","name","col_ml_member","addr2ml","keys","values","uniq_values","Set","reduce","sum","e","concat","all_values","Array","sort","inverted","map","key_index","get","invert","row","split","filter","join","write","end","readAsArrayBuffer","event","target","id","this","p1_disabled","p2_disabled","currentTarget","forEach","i","handleDrop","open","data-open","data-close","htmlFor","type","onChange","disabled","onClick","title","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1d89b5f1.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\r\nimport ReactDOM from 'react-dom';\r\nimport { useDropzone } from 'react-dropzone'\r\nimport iconv from \"iconv-lite\";\r\nimport parse from 'csv-parse'\r\nimport './index.css';\r\n\r\nfunction MyDropzone(props: any) {\r\n  const onDrop = useCallback(props.onDrop, [])\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\r\n\r\n  return (\r\n    <div {...getRootProps({ className: 'dropzone' })}>\r\n      <input {...getInputProps()} />\r\n      {\r\n        isDragActive ?\r\n          <p>ファイルを開く ...</p> :\r\n          <p>CSVファイルをドロップ。もしくはクリックして選択。</p>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction invert<S, T>(keys: S[], values: T[][]): Map<T, S[]> {\r\n  let uniq_values = new Set<T>(values.reduce((sum, e) => sum.concat(e), []));\r\n  const all_values = Array.from(uniq_values).sort()\r\n  const inverted = new Map<T, S[]>(all_values.map(value => [value, []]));\r\n  keys.map((key, key_index) => values[key_index].map(value => inverted.get(value)!.push(key)))\r\n  return inverted;\r\n}\r\n\r\ntype ColumnsType = { key: string, value: string };\r\n\r\ninterface AppProps {\r\n  cols: ColumnsType,\r\n  preset1_disabled: boolean,\r\n  preset2_disabled: boolean,\r\n  rows: Map<string, string[]>,\r\n  error: string,\r\n}\r\n\r\nfunction describe_preset_button(p: ColumnsType) {\r\n  return '\"' + p.key + '\"と\"' + p.value + '\"をセットします。';\r\n}\r\nfunction equal_cols(c1: ColumnsType, c2: ColumnsType) {\r\n  return c1.key === c2.key && c1.value === c2.value;\r\n}\r\nconst preset1_cols: ColumnsType = { key: 'MLアドレス', value: 'MLメンバー' };\r\nconst preset2_cols: ColumnsType = { key: 'MLメールアドレス(編集不可)', value: 'メンバー' };\r\n\r\nclass App extends React.Component<any, AppProps> {\r\n\r\n  constructor(props: AppProps) {\r\n    super(props)\r\n    this.state = {\r\n      cols: preset1_cols,\r\n      preset1_disabled: true,\r\n      preset2_disabled: false,\r\n      rows: new Map<string, string[]>([['', ['']]]), // initialize rows with one entry to show empty table in the page\r\n      error: '',\r\n    }\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleButtonClick = this.handleButtonClick.bind(this);\r\n  }\r\n\r\n  handleDrop(acceptedFiles: File[]) {\r\n    const file = acceptedFiles[0];\r\n    const reader = new FileReader()\r\n\r\n    reader.onabort = () => alert('file reading was aborted')\r\n    reader.onerror = () => alert('file reading has failed')\r\n    reader.onload = () => {\r\n      // Do whatever you want with the file contents\r\n      if (!(reader.result instanceof ArrayBuffer)) {\r\n        this.setState({\r\n          error: 'Something went wrong with FileReader',\r\n        })\r\n        return;\r\n      }\r\n      const binary = reader.result;\r\n      const decodedStr = iconv.decode(Buffer.from(binary), \"windows-31j\")\r\n\r\n      let header: string[] = [];\r\n      const body: string[][] = [];\r\n\r\n      // Create the parser\r\n      const parser = parse({\r\n        delimiter: ',',\r\n        skip_empty_lines: true,\r\n      })\r\n      // Use the readable stream api\r\n      parser.on('readable', () => {\r\n        let record: string[];\r\n        while (Boolean(record = parser.read())) {\r\n          if (header.length === 0) {\r\n            header = record;\r\n          } else {\r\n            body.push(record);\r\n          }\r\n        }\r\n      })\r\n      // Catch any error\r\n      parser.on('error', (err: any) => {\r\n        this.setState({\r\n          error: 'CSVのパースに失敗しました。' + err.message,\r\n        })\r\n      })\r\n\r\n      parser.on('end', () => {\r\n        console.log(header)\r\n        const key_col_name = this.state.cols.key;\r\n        const value_col_name = this.state.cols.value;\r\n        const col_ml_addr = header.findIndex(name => name === key_col_name);\r\n        if (col_ml_addr === -1) {\r\n          this.setState({\r\n            error: '[' + key_col_name + ']が見つかりませんでした。ヘッダは次の中から選ぶ必要があります。{' + header.join(', ') + '}',\r\n          })\r\n          return;\r\n        }\r\n        const col_ml_member = header.findIndex(name => name === value_col_name);\r\n        if (col_ml_member === -1) {\r\n          this.setState({\r\n            error: '[' + value_col_name + ']が見つかりませんでした。ヘッダは次の中から選ぶ必要があります。{' + header.join(', ') + '}',\r\n          })\r\n          return;\r\n        }\r\n        const ml_addrs = body.map(row => row[col_ml_addr])\r\n        const members = body.map(row => row[col_ml_member].split('\\n').filter(e => e.length > 0))\r\n        const addr2ml = invert(ml_addrs, members)\r\n        this.setState({\r\n          rows: addr2ml,\r\n          error: '',\r\n        });\r\n      })\r\n      parser.write(decodedStr)\r\n      parser.end()\r\n    }\r\n    reader.readAsArrayBuffer(file)\r\n  }\r\n\r\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\r\n    const { target: { id, value } } = event;\r\n    const cols: ColumnsType = { ...this.state.cols };\r\n    if (id === 'col_key') {\r\n      cols.key = value;\r\n    }\r\n    if (id === 'col_value') {\r\n      cols.value = value;\r\n    }\r\n    const p1_disabled = equal_cols(preset1_cols, cols);\r\n    const p2_disabled = equal_cols(preset2_cols, cols);\r\n    console.log(cols, preset1_cols, p1_disabled);\r\n    this.setState({\r\n      cols: cols,\r\n      preset1_disabled: p1_disabled,\r\n      preset2_disabled: p2_disabled\r\n    })\r\n  }\r\n\r\n  handleButtonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    const id = event.currentTarget.id;\r\n    let cols: ColumnsType;\r\n    let p1_disabled = false;\r\n    let p2_disabled = false;\r\n    if (id === 'btn_preset1') {\r\n      cols = preset1_cols;\r\n      p1_disabled = true;\r\n    } else {\r\n      cols = preset2_cols;\r\n      p2_disabled = true;\r\n    }\r\n    this.setState({\r\n      cols: cols,\r\n      preset1_disabled: p1_disabled,\r\n      preset2_disabled: p2_disabled\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let result: React.ReactElement;\r\n    if (this.state.error !== '') {\r\n      result = (\r\n        <div>\r\n          <h2 className=\"error\">エラー</h2>\r\n          <div className=\"error\">\r\n            <p>\r\n              {this.state.error}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      const rows = Array<React.ReactElement>();\r\n      this.state.rows.forEach((value, key) => {\r\n        rows.push(\r\n          <tr key={key}>\r\n            <td>{key}</td>\r\n            <td>\r\n              <ol>\r\n                {value.map((e, i) => (<li key={i}>{e}</li>))}\r\n              </ol>\r\n            </td>\r\n          </tr>\r\n        )\r\n      })\r\n      const header = (\r\n        <thead>\r\n          <tr>\r\n            <th>{this.state.cols.key}</th>\r\n            <th>{this.state.cols.value}</th>\r\n          </tr>\r\n        </thead>\r\n      )\r\n      result = (\r\n        <div>\r\n          <h2>結果</h2>\r\n          <table className=\"result\">\r\n            {header}\r\n            <tbody>\r\n              {rows}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <MyDropzone\r\n          onDrop={(acceptedFiles: File[]) => this.handleDrop(acceptedFiles)} />\r\n        {result}\r\n        <h2>設定</h2>\r\n        <details className=\"dynamic\" open={this.state.error !== \"\"}>\r\n          <summary data-open=\"閉じる\" data-close=\"開く\"></summary>\r\n          <table className=\"config\">\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <label htmlFor=\"col_key\">メーリングリストのヘッダ</label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" id=\"col_key\" value={this.state.cols.key} onChange={this.handleChange} />\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <label htmlFor=\"col_value\">メールアドレスのヘッダ</label>\r\n                </td>\r\n                <td>\r\n                  <input type=\"text\" id=\"col_value\" value={this.state.cols.value} onChange={this.handleChange} />\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          <button disabled={this.state.preset1_disabled} id=\"btn_preset1\" onClick={this.handleButtonClick} title={this.state.preset1_disabled?\"\":describe_preset_button(preset1_cols)}>プリセット1(統計確認)</button>\r\n          <button disabled={this.state.preset2_disabled} id=\"btn_preset2\" onClick={this.handleButtonClick} title={this.state.preset2_disabled?\"\":describe_preset_button(preset2_cols)}>プリセット2(ML管理)</button>\r\n        </details>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}