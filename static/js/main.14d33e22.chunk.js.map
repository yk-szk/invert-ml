{"version":3,"sources":["index.tsx"],"names":["MyDropzone","props","onDrop","useCallback","useDropzone","getRootProps","getInputProps","isDragActive","className","PRESETS","name","cols","key","value","Result","result","rows","Array","download","push","csv_data","forEach","map","e","i","join","data","filename","title","header","Buttons","buttons","preset_disabled","index","p","attributes","id","String","disabled","onClick","Config","open","data-open","data-close","htmlFor","type","onChange","onButtonClick","equal_cols","c1","c2","App","state","preset","handleChange","bind","handleButtonClick","acceptedFiles","file","reader","FileReader","onabort","alert","onerror","onload","ArrayBuffer","binary","decodedStr","iconv","decode","Buffer","from","body","parser","parse","delimiter","skip_empty_lines","on","record","Boolean","read","length","err","setState","message","key_col_name","value_col_name","col_ml_addr","findIndex","col_ml_member","addr2ml","keys","values","uniq_values","Set","reduce","sum","concat","all_values","sort","inverted","Map","key_index","get","invert","row","split","filter","write","end","readAsArrayBuffer","event","target","this","currentTarget","button_index","parseInt","replace","fill","handleDrop","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14d33e22.chunk.js","sourcesContent":["import React, { useCallback } from 'react'\nimport ReactDOM from 'react-dom';\nimport { useDropzone } from 'react-dropzone'\nimport iconv from \"iconv-lite\";\nimport parse from 'csv-parse'\nimport { CSVLink } from \"react-csv\";\n\nimport './index.css';\n\nfunction MyDropzone(props: any) {\n  const onDrop = useCallback(props.onDrop, [])\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop })\n\n  return (\n    <div {...getRootProps({ className: 'dropzone' })}>\n      <input {...getInputProps()} />\n      {\n        isDragActive ?\n          <p>ファイルを開く ...</p> :\n          <p>CSVファイルをドロップ。もしくはクリックして選択。</p>\n      }\n    </div>\n  )\n}\n\ntype ColumnsType = { key: string, value: string };\ntype ResultType = Map<string, string[]> | string | null;\ninterface AppState {\n  cols: ColumnsType,\n  preset_disabled: boolean[],\n  result: ResultType,\n}\n\ntype PresetType = { name: string, cols: ColumnsType };\nconst PRESETS: ReadonlyArray<PresetType> = [\n  { name: '統計確認', cols: { key: 'MLアドレス', value: 'MLメンバー' } },\n  { name: 'ML管理', cols: { key: 'MLメールアドレス(編集不可)', value: 'メンバー' } }\n];\nconst PRESET_BUTTON_PREFIX = 'btn_preset';\n\nfunction Result(props: { result: ResultType, cols: ColumnsType }) {\n  if (typeof props.result === 'string') {\n    return (\n      <div>\n        <h2 className=\"error\">エラー</h2>\n        <div className=\"error\">\n          <p>\n            {props.result}\n          </p>\n        </div>\n      </div>\n    )\n  } else {\n    const rows = Array<React.ReactElement>();\n    let download: React.ReactElement = <></>;\n    if (props.result === null) {\n      rows.push(\n        <tr key='0'>\n          <td></td>\n          <td></td>\n        </tr>\n      )\n    } else {\n      const csv_data = [[props.cols.key, props.cols.value]];\n      props.result.forEach((value, key) => {\n        rows.push(\n          <tr key={key}>\n            <td>{key}</td>\n            <td>\n              <ol>\n                {value.map((e, i) => (<li key={i}>{e}</li>))}\n              </ol>\n            </td>\n          </tr>\n        )\n        csv_data.push([key, value.join('\\n')])\n      })\n      download = (\n        <CSVLink data={csv_data} filename='inverted.csv'>\n          <button title='結果をダウンロード'>ダウンロード</button>\n        </CSVLink>\n      )\n    }\n    const header = (\n      <thead>\n        <tr>\n          <th>{props.cols.key}</th>\n          <th>{props.cols.value}</th>\n        </tr>\n      </thead>\n    )\n\n    return (\n      <div>\n        <h2>結果</h2>\n        <table className=\"result\">\n          {header}\n          <tbody>\n            {rows}\n          </tbody>\n        </table>\n        {download}\n      </div>\n    )\n  }\n}\n\nfunction Buttons(props: { preset_disabled: boolean[], onClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void }) {\n  const buttons = props.preset_disabled.map((preset_disabled, index) => {\n    const attributes = {\n      id: PRESET_BUTTON_PREFIX + String(index),\n      key: index,\n      disabled: preset_disabled,\n      onClick: props.onClick,\n      title: preset_disabled ? \"すでにセットされています。\" : describe_preset_button(PRESETS[index].cols),\n    };\n    return <button {...attributes}>プリセット{index + 1}({PRESETS[index].name})</button>\n  })\n  return (\n    <>\n      {buttons}\n    </>\n  )\n}\n\nfunction Config(props: {\n  result: ResultType, cols: ColumnsType, onChange: (event: React.ChangeEvent<HTMLInputElement>) => void,\n  preset_disabled: boolean[], onButtonClick: (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void\n}) {\n  return (\n    <>\n      <h2>設定</h2>\n      <details className=\"dynamic\" open={typeof props.result !== 'string'}>\n        <summary data-open=\"閉じる\" data-close=\"開く\"></summary>\n        <table className=\"config\">\n          <tbody>\n            <tr>\n              <td>\n                <label htmlFor=\"col_key\">メーリングリストのヘッダ</label>\n              </td>\n              <td>\n                <input type=\"text\" id=\"col_key\" value={props.cols.key} onChange={props.onChange} />\n              </td>\n            </tr>\n            <tr>\n              <td>\n                <label htmlFor=\"col_value\">メールアドレスのヘッダ</label>\n              </td>\n              <td>\n                <input type=\"text\" id=\"col_value\" value={props.cols.value} onChange={props.onChange} />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <Buttons preset_disabled={props.preset_disabled} onClick={props.onButtonClick} />\n      </details>\n    </>\n\n  )\n}\n\nfunction invert<S, T>(keys: S[], values: T[][]): Map<T, S[]> {\n  let uniq_values = new Set<T>(values.reduce((sum, e) => sum.concat(e), []));\n  const all_values = Array.from(uniq_values).sort()\n  const inverted = new Map<T, S[]>(all_values.map(value => [value, []]));\n  keys.map((key, key_index) => values[key_index].map(value => inverted.get(value)!.push(key)))\n  return inverted;\n}\n\nfunction describe_preset_button(p: ColumnsType) {\n  return '\"' + p.key + '\"と\"' + p.value + '\"をセットします。';\n}\nfunction equal_cols(c1: ColumnsType, c2: ColumnsType) {\n  return c1.key === c2.key && c1.value === c2.value;\n}\n\nclass App extends React.Component<{}, AppState> {\n\n  constructor(props: {}) {\n    super(props)\n    this.state = {\n      cols: PRESETS[0].cols,\n      preset_disabled: PRESETS.map(preset => equal_cols(preset.cols, PRESETS[0].cols)),\n      result: null,\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n  }\n\n  handleDrop(acceptedFiles: File[]) {\n    const file = acceptedFiles[0];\n    const reader = new FileReader()\n\n    reader.onabort = () => alert('file reading was aborted')\n    reader.onerror = () => alert('file reading has failed')\n    reader.onload = () => {\n      // Do whatever you want with the file contents\n      if (!(reader.result instanceof ArrayBuffer)) {\n        this.setState({\n          result: 'Something went wrong with FileReader',\n        })\n        return;\n      }\n      const binary = reader.result;\n      const decodedStr = iconv.decode(Buffer.from(binary), \"windows-31j\")\n\n      let header: string[] = [];\n      const body: string[][] = [];\n\n      // Create the parser\n      const parser = parse({\n        delimiter: ',',\n        skip_empty_lines: true,\n      })\n      // Use the readable stream api\n      parser.on('readable', () => {\n        let record: string[];\n        while (Boolean(record = parser.read())) {\n          if (header.length === 0) {\n            header = record;\n          } else {\n            body.push(record);\n          }\n        }\n      })\n      // Catch any error\n      parser.on('error', (err: any) => {\n        this.setState({\n          result: 'CSVのパースに失敗しました。' + err.message,\n        })\n      })\n\n      parser.on('end', () => {\n        const key_col_name = this.state.cols.key;\n        const value_col_name = this.state.cols.value;\n        const col_ml_addr = header.findIndex(name => name === key_col_name);\n        if (col_ml_addr === -1) {\n          this.setState({\n            result: '[' + key_col_name + ']が見つかりませんでした。ヘッダは次の中から選ぶ必要があります。{' + header.join(', ') + '}',\n          })\n          return;\n        }\n        const col_ml_member = header.findIndex(name => name === value_col_name);\n        if (col_ml_member === -1) {\n          this.setState({\n            result: '[' + value_col_name + ']が見つかりませんでした。ヘッダは次の中から選ぶ必要があります。{' + header.join(', ') + '}',\n          })\n          return;\n        }\n        const ml_addrs = body.map(row => row[col_ml_addr])\n        const members = body.map(row => row[col_ml_member].split('\\n').filter(e => e.length > 0))\n        const addr2ml = invert(ml_addrs, members)\n        this.setState({\n          result: addr2ml,\n        });\n      })\n      parser.write(decodedStr)\n      parser.end()\n    }\n    reader.readAsArrayBuffer(file)\n  }\n\n  handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    const { target: { id, value } } = event;\n    const cols: ColumnsType = { ...this.state.cols };\n    if (id === 'col_key') {\n      cols.key = value;\n    }\n    if (id === 'col_value') {\n      cols.value = value;\n    }\n    this.setState({\n      cols: cols,\n      preset_disabled: PRESETS.map(preset => equal_cols(preset.cols, PRESETS[0].cols)),\n    })\n  }\n\n  handleButtonClick(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\n    const id = event.currentTarget.id;\n    const button_index = parseInt(id.replace(PRESET_BUTTON_PREFIX, ''));\n    let preset_disabled = Array<boolean>(PRESETS.length).fill(false);\n    preset_disabled[button_index] = true;\n    this.setState({\n      cols: PRESETS[button_index].cols,\n      preset_disabled: preset_disabled,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <MyDropzone\n          onDrop={(acceptedFiles: File[]) => this.handleDrop(acceptedFiles)} />\n        <Result result={this.state.result} cols={this.state.cols} />\n        <Config result={this.state.result} cols={this.state.cols} onChange={this.handleChange}\n          preset_disabled={this.state.preset_disabled} onButtonClick={this.handleButtonClick} />\n      </div>\n    )\n  }\n}\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}